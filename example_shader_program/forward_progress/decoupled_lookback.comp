#version 450
#pragma scheduler(HSA)
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_KHR_shader_subgroup_vote : enable
layout(local_size_x = 2) in;
layout(tla_subgroup_size = 2) in;
layout(tla_num_workgroups = 2) in;

layout(std430, binding = 0) buffer Partition {
    uint part;
};

layout(std430, binding = 0) buffer BitArray {
    uint bitArray;
};

shared uint workgroupPart;

void main() {
    // 2: entry block
    if (localIdx == 0){
        workgroupPart = atomicAdd(part, 1);
    }
    barrier();
    uint localIdx = gl_LocalInvocationID.x;
    uint partIdx = workgroupPart;
    uint workgroupSize = gl_WorkGroupSize.x;

    for (uint i = partIdx - 1; i > 0;) {
        uint index = i * workgroupSize + localIdx;
        uint payLoad = bitArray & index;
        if (payLoad == 1) {
            i -= 1;
        }
    }
    bitArray = bitArray | (partIdx * workgroupSize + localIdx);
}