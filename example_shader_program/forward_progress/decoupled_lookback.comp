#version 450
#pragma scheduler(HSA)
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_KHR_shader_subgroup_vote : enable
layout(local_size_x = 1) in;
layout(tla_subgroup_size = 1) in;
layout(tla_num_workgroups = 2) in;

layout(std430, binding = 0) buffer Partition {
    uint part;
};

layout(std430, binding = 0) buffer BitArray {
    uint bitArray;
};

shared uint workgroupPart;

// This requires OBE to terminate
void main() {
    // 2: entry block
    uint localIdx = gl_LocalInvocationID.x;
    if (localIdx == 0){
        workgroupPart = atomicAdd(part, 1);
    }
    barrier();
    uint partIdx = workgroupPart;
    uint workgroupSize = gl_WorkGroupSize.x;

    for (int i = int(partIdx - 1); i >= 0;) {
        uint index = 1u << (i * workgroupSize + localIdx);
        uint payLoad = bitArray & index;
        if (payLoad == 1) {
            i -= 1;
        }
    }
    atomicOr(bitArray, 1u << (partIdx * workgroupSize + localIdx));
}